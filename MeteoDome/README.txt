MeteoDome
Задачи GUI
- опрос контролера крыши и управление крышей через RS232 (Com-port). Наверное понадобится эмулятор крыши для отладки?
- //опрос метеоБД
- //вычисление высоты солнца
- //вычислять условия для закрывания/открывания крыши (Dome conditions), см. алгоритм и критерии в mdaemon (perl)
- //вычислять условия для начала/окончания наблюдений (Observation conditions), см. алгоритм и критерии в mdaemon (perl)
- //галка для автоматического прекращения наблюдений и закрывания крыши, если условия не выполняются
- обращение через сокет к программам управления камерами и телескопом и посылка команд на парковку (опционально)

FLI3GUI
Задачи GUI
- Было бы очень хорошо сделать все на c#. Для этого нужно подключить либу от FLI. Работу с фитсами можно сделать в c# (CSharpFITS_v1.1.dll)
- управление камерами, получение изображений, сохранение фитс-файлов
- анализ изображения с выбранной камеры: измерение FWHM, центроида и еще по мелочи (обсудим), запись в лог-файл.
- графическое представление измерений (надо ли?)
- вычисление сдвига между экспозициями, обращение к телескопу с просьбой поправить положение (гидирование)
- управление фокусировкой через RS232 (Com-port), кнопки +-
- галка для автоматической фокусировки, алгоритм см. в autofocus.cpp, обсуждаем
- запрос к телескопу на получение текущих координат (пишутся в фитс-шапку)
- запрос к базе метео на получение параметров погоды (пишутся в фитс-шапку)


GUI управление телескопом
Писать это сложнее всего. Предлагаю воспользоваться платформой ASCOM (https://ascom-standards.org/), которая упростит работу.
Примеры работы с ASCOM на c# пришлю. Но это смое последнее, что будем делать.

Вопросы
Какое приложение будет сокет-сервером (постоянно открыт и слушает), а какое клиентом (посылает запросы).
По идее FLI и телескоп должны быть серверами, а Meteo - клиентом и посылать им команды на начало и конец наблюдений.









1) watchdog!
2) RS485 интерфейс 	(3 in)
3) грозозащита
    4) 4 кнопки			(4 in)
    5) 4 концевика		(4 in)
    6) управление двумя моторами (4 out)
    7) таймаут на движение (установка по RS485)
    8) проверка экстра концевиков, питания моторов (3 in)
9) сброс контроллера?
10) эхо?
11) таймер на молчание компьютера?

кнопки
Кнопки створок А и В независимы.
Нажатие открыть/закрыть вызывает соответствующее действие. Отпускаем - стоп.

N.B. вместо знака ';' используется нулевой знак '\0'

состояние концевиков, кнопок, моторов, таймаут
байт концевиков: 	u  u  u  u  nc no sc so //unused, north or south, closed or opened // 1gce;
байт кнопок:		u  u  u  u  nc no sc so //unused, north or south, close or open    // 1gcb;
байт таймаутов:     u  u  u  u  nc no sc so //timeout north close, timeout north open, timeout south close, timeout south open 
байт моторов:		u  u  u  u  nc no sc so //unused, north or south, close or open    // 1gcm;
байт питания:		u  u  u  u  u  pn ps ee //unused, power north, power south, extra endswithch // 1gcp; 
байт моторов и концевиков:     nc no sc so nc no sc so // motors, endswitches // 1gca;

Протокол общения
Команды:
функции		// команды
открыть N 	// 1rno;
закрыть N 	// 1rnc;
открыть S 	// 1rso;
закрыть S 	// 1rsc;
стоп N		// 1rns;
стоп S		// 1rss;
открыть обе // 1rao;
закрыть обе // 1rac;
стоп обе	// 1ras;

Установки:						// команды
установка таймаута северного	// 1stn=120; // секунд
установка таймаута южного		// 1sts=120; // секунд

Запросы:
запрос состояния концевых выключателей	//	1gce;	//	1ace=[byte];	//	возвращает байт u  u  u  u  nc no sc so
запрос состояния кнопок					//	1gcb;	//	1acb=[byte];	//	возвращает байт u  u  u  u  nc no sc so
запрос состояния таймаутов				//	1gct;	//	1act=[byte];	//	возвращает байт u  u  u  u  nc no sc so
запрос состояния моторов				//	1gcm;	//	1acm=[byte];	//	возвращает байт u  u  u  u  nc no sc so
запрос состояния питания моторов		//	1gcp;	//	1acp=[byte];	//	возвращает байт u  u  u  u  u  pn ps ee
запрос состояния моторов и концевиков   //  1gca;   //  1aca=[byte];    //  возвращает байт nc no sc so nc no sc so (Motors*16 + Switches)
запрос значения северного таймаута		//	1gtn;	//	1atn=[int];		//	возвращает значение в секундах
запрос значения южного таймаута			//	1gts;	//	1ats=[int];		//	возвращает значение в секундах
запрос состояния initflag               //  1gin;   //  1ain=[0 or 1];  // возвращает значение initflag, присваиваеит значение initflag=0

dome_protocol.txt
Отображается файл "dome_protocol.txt"
